public class Solution { 
	public static int maximumChocolates(int r, int c, int[][] grid) {
        int[][][] dp = new int[r][c][c];
        for(int i = 0; i < r; i++){
            for(int j = 0; j < c; j++){
                for(int k = 0; k < c; k++) {
                    dp[i][j][k] = -1;
                }
            }
        }
        return f(0, 0, c-1, r, c, grid, dp);
	}
    public static int f(int i, int j1, int j2, int r, int c, int[][] grid, int[][][] dp) {
        if(j1 < 0 || j2 < 0 || j1 >= c || j2 >= c) {
            return -100000000;
        }
        if(i == r-1) {
            if(j1 == j2) {
                return grid[i][j1];
            }
            else {
                return grid[i][j1] + grid[i][j2];
            }
        }
        if(dp[i][j1][j2] != -1) {
            return dp[i][j1][j2];
        }
        
        int maxi = Integer.MIN_VALUE;
        for(int dj1 = -1; dj1 <= 1; dj1++) {
            for(int dj2 = -1; dj2 <= 1; dj2++) {
                int points = 0;
                if(j1 == j2) {
                    points += grid[i][j1];
                }
                else {
                    points += grid[i][j1] + grid[i][j2]; 
                }
                points += f(i+1, j1+dj1, j2+dj2, r, c, grid, dp);
                maxi = Math.max(maxi, points);
            }
        }
        
        return dp[i][j1][j2] = maxi;
    }
}
