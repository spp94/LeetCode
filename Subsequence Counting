import java.util.*;
public class Solution {
    public static int subsequenceCounting(String t, String s, int lt, int ls) {
        int n = lt, m = ls;
        int[][] dp = new int[n][m];
        for(int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return f(n-1, m-1, t, s, dp);
    }
    public static int f(int i, int j, String s, String t, int[][] dp) {
        if(j < 0) {
            return 1;
        }
        if(i < 0) {
            return 0;
        }
        if(dp[i][j] != -1) {
            return dp[i][j];
        }
       
        if(s.charAt(i) == t.charAt(j)) {
            return dp[i][j] = (f(i-1, j-1, s, t, dp) + f(i-1, j, s, t, dp)) % 1000000007;
        }
        else {
            return dp[i][j] = f(i-1, j, s, t, dp) % 1000000007;
        }
    }
}
