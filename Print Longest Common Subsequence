
public class Solution {

	public static int lcs(String s, String t) {
		int n = s.length(), m = t.length();
        int[][] dp = new int[n+1][m+1];
        for(int i = 0; i < m; i++) {
            dp[0][i] = 0;
        }
        for(int i = 0; i < n; i++) {
            dp[i][0] = 0;
        }
        for(int i = 1; i <= n; i++) {
            for(int j = 1; j <= m; j++) {
                if(s.charAt(i-1) == t.charAt(j-1)) {
                    dp[i][j] = 1 + dp[i-1][j-1];
                }
                else {
                    dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);
                }
            }
        }
        
        for(int i = 0; i <= n; i++) {
            for(int j = 0; j <= m; j++) {
                System.out.print(dp[i][j] + " ");
            }
            System.out.println();
        }
        
        String result = "";
        int i = n, j = m;
        while( i > 0 && j > 0) {
            if(s.charAt(i-1) == t.charAt(j-1)) {
                result = s.charAt(i-1) + result;
                i--;
                j--;
            }
            else {
                if(dp[i-1][j] > dp[i][j-1]) {
                    i--;
                }
                else {
                    j--;
                }
            }
        }
        
        System.out.println(result);
        
        return dp[n][m];
    }

}
