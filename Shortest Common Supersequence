public class Solution {
    public static String shortestSupersequence(String s, String t) {
        int n = s.length(), m = t.length();
        int[][] dp = new int[n+1][m+1];
        for(int i = 1; i <= n; i++) {
            for(int j = 1; j <= m; j++) {
                if(s.charAt(i-1) == t.charAt(j-1)) {
                    dp[i][j] = 1 + dp[i-1][j-1];
                }
                else {
                    dp[i][j] = Math.max(dp[i][j-1], dp[i-1][j]);
                }
            }
        }
        
        String answer = "";
        int i = n, j = m;
        while(i > 0 && j > 0) {
            if(s.charAt(i-1) == t.charAt(j-1)) {
                answer = s.charAt(i-1) + answer;
                i--; 
                j--;
            }
            else if(dp[i][j-1] > dp[i-1][j]) {
                answer = t.charAt(j-1) + answer;
                j--;
            }
            else {
                answer = s.charAt(i-1) + answer;
                i--;
            }
        }
        while(i > 0) {
            answer = s.charAt(i-1) + answer;
            i--;
        }
        while(j > 0) {
            answer = t.charAt(j-1) + answer;
            j--;
        }
        
        return answer;
    }

}
