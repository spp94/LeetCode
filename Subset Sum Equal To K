import java.util.*;
public class Solution {
    public static boolean subsetSumToK(int n, int k, int arr[]){
        int[][] dp = new int[n][k+1];
        for(int i = 0; i < n; i++) {
            for(int j = 0; j <= k; j++) {
                dp[i][j] = -1;
            }
        }
        return f(n-1, k, arr, dp);
    }
    public static boolean f(int index, int k, int arr[], int[][] dp) {
        if(k == 0) {
            return true;
        }
        if(index == 0) {
            return arr[index] == k;
        }
        if(dp[index][k] != -1) {
            return dp[index][k] == 1;
        }
        
        boolean taken = false;
        if(k >= arr[index]) {
            taken = f(index-1, k - arr[index], arr, dp);
        }
        boolean notTaken = f(index-1, k, arr, dp);
        
        dp[index][k] = taken || notTaken ? 1 : 0;
        return taken || notTaken;
    }
}
