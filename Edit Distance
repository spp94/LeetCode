import java.util.*; 
public class Solution {
    public static int f(int i, int j, String s, String t, int[][] dp) {
        if(i < 0) {
            return j+1;
        }
        if(j < 0) {
            return i+1;
        }
        if(dp[i][j] != -1) {
            return dp[i][j];
        }
        if(s.charAt(i) == t.charAt(j)) {
            return dp[i][j] = f(i-1, j-1, s, t, dp);
        }
        else {
            return dp[i][j] = 1 + Math.min(Math.min(f(i-1, j-1, s, t, dp), f(i-1, j, s, t, dp)), f(i, j-1, s, t, dp));
        }
    }
    public static int editDistance(String s, String t) {
        int n = s.length(), m = t.length();
        int[][] dp = new int[n][m];
        for(int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return f(n-1, m-1, s, t, dp);
    }
}
