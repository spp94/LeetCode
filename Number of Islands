class Solution {
    public int numIslands(char[][] grid) {
        int n = grid.length, m = grid[0].length;
        int count = 0;
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < m; j++) {
                if(grid[i][j] == '1') {
                    count++;
                    DFS(i, j, grid);
                }
            }
        }

        return count;
    }
    public void DFS(int row, int column, char[][] grid) {
        if(row < 0 || column < 0 || row > grid.length-1 || column > grid[0].length-1 || 
        grid[row][column] == '0') {
            return;
        }

        grid[row][column] = '0';
        DFS(row-1, column, grid);
        DFS(row+1, column, grid);
        DFS(row, column+1, grid);
        DFS(row, column-1, grid);
    }
}
