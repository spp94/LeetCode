import java.util.*; 
public class Solution { 
    public static int f(int index, int buy, int n, int[] prices, int[][] dp) {
        if(index >= n) {
            return 0;
        }
        if(dp[index][buy] != -1) {
            return dp[index][buy];
        }
        int profit = 0;
        if(buy == 1) {
            profit = Math.max(-prices[index] + f(index+1, 0, n, prices, dp),
                              0 + f(index+1, 1, n, prices, dp));
        }
        else {
            profit = Math.max(prices[index] + f(index+2, 1, n, prices, dp),
                              0 + f(index+1, 0, n, prices, dp));
        }
        
        return dp[index][buy] = profit;
    }
	public static int stockProfit(int[] prices) {
        int n = prices.length;
        int[][] dp = new int[n][2];
        for(int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return f(0, 1, n, prices, dp);
	}
}
