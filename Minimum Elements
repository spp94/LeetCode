import java.util.*; 
public class Solution {
    public static int minimumElements(int num[], int x) {
        int n = num.length;
        int[][] dp = new int[n][x+1];
        for(int[] row : dp) {
            Arrays.fill(row, -1);
        }
        int res = f(n-1, x, num, dp);
        return res == 100000000 ? -1 : res;
    }
    public static int f(int index, int target, int[] num, int[][] dp) {
        if(index == 0) {
            if(target % num[0] == 0) {
                return target / num[0];
            }
            else {
                return 100000000;
            }
        }
        if(dp[index][target] != -1) {
            return dp[index][target];
        }
        
        int notPick = 0 + f(index-1, target, num, dp);
        int pick = Integer.MAX_VALUE;
        if(num[index] <= target) {
            pick = 1 + f(index, target-num[index], num, dp);
        }
        
        return dp[index][target] = Math.min(pick, notPick);
    }

}
