import java.util.*;
public class Solution {
    public static int findWays(int num[], int tar) {
        int n = num.length;
        int[][] dp = new int[n][tar+1];
        for(int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return f(n-1, tar, num, dp);
    }
    public static int f(int index, int target, int[] arr, int[][] dp) {
        if(target == 0) {
            return 1;
        }
        if(index == 0) {
            return arr[index] == target ? 1 : 0;
        }
        if(dp[index][target] != -1) {
            return dp[index][target];
        }
        
        int notPick = f(index-1, target, arr, dp);
        int pick = 0;
        if(arr[index] <= target) {
            pick = f(index-1, target-arr[index], arr, dp);
        }
        
//         return pick + notPick;
        return dp[index][target] = pick + notPick;
    }
}
