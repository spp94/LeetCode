import java.io.*;  
import java.math.*; 
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the acmTeam function below.
    static int[] acmTeam(String[] topic) {
        int n = topic.length, index  =0;
        int[] temp = new int[n*(n-1)/2];
        for(int i = 0; i < topic.length; i++){
            String s1 = topic[i];
            for(int j = i+1; j < topic.length; j++){
                String s2 = topic[j];
                int count = 0;
                for(int k = 0; k < s1.length(); k++){
                    if(s1.charAt(k) == '1' || s2.charAt(k) == '1'){
                        count++;
                    }
                }
                temp[index++] = count;
            }
        }
        int max = 0;
        for(int i = 0; i < temp.length; i++){
            if(temp[i] > max){
                max = temp[i];
            }
        }
        int counter  = 0;
        for(int i = 0; i < temp.length; i++){
            if(temp[i] == max){
                counter++;
            }
        }
        int[] res = new int[2];
        res[0] = max;
        res[1] = counter;
        return res;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nm = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nm[0]);

        int m = Integer.parseInt(nm[1]);

        String[] topic = new String[n];

        for (int i = 0; i < n; i++) {
            String topicItem = scanner.nextLine();
            topic[i] = topicItem;
        }

        int[] result = acmTeam(topic);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
